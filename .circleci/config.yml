# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  build:    
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm i
      - run: npm update
      - run: npm run lint

  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm i
      - run: npm update
      - run: npm run test

  analyze:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm i
      - run: npm update
      - run: npm audit

  create_infrastructure:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install aws-cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
      - run: 
          name: bring up cloudformation
          command: |
            aws cloudformation create-stack --stack-name infraStack --template-body file://infra/template.yml --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" --region=us-east-1
      
      - run: 
          name: populate inventory file
          command: | 
            echo "[all]" > infra/ansible/inventory
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> inventory
      - persist_to_workspace:
          root: .
          paths:
            - infra/ansible/inventory

  setup_infra:
    docker:
      - image: python:3.7-alpine3.11 
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints: ["c0:88:5a:7b:6c:1c:08:67:06:fa:46:62:f4:8c:e2:96"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible

      - run:
          name: run Ansible
          command: |
            ansible-playbook infra/ansible/main-remote.yml -i infra/ansible/inventory

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test.
          command: |
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL} # test if blog.udacity. com exists
            then
              return 0
            else
              return 1
            fi

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - build 
      - test:
          requires:
            - build
      - create_infrastructure:
          requires:
            - test
      - setup_infra:
          requires:
            - create_infrastructure
